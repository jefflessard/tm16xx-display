#!/bin/sh

DISPLAY_PATH="/sys/class/leds/display"

set -e

display_init() {
    systemctl stop display
    cat $DISPLAY_PATH/max_brightness > $DISPLAY_PATH/brightness
}

display_cleanup() {
    systemctl start display
    # Best effort to kill background jobs
    jobs | awk '{print $2}' | xargs -r kill 2>/dev/null
}

display_text() {
    TEXT="$1"
    PADDING="$2"
    SLEEP="$3"

    if [ -n "$PADDING" ]; then
        i=1
        while [ $i -le "$NUM_DIGITS" ]; do
            TEXT="$PADDING$TEXT$PADDING"
            i=$((i + 1))
        done
    fi

    while [ "${#TEXT}" -ge "$NUM_DIGITS" ]; do
        printf '%s\n' "$(printf '%s' "$TEXT" | cut -c1-"$NUM_DIGITS")" > $DISPLAY_PATH/value
        TEXT=$(printf '%s' "$TEXT" | cut -c2-)
        sleep "$SLEEP"
    done
}

display_check() {
    echo "all digits and leds on"
    echo 88888888 > $DISPLAY_PATH/value
    for led in $DISPLAY_PATH:*; do
        echo 1 > "$led/brightness"
    done
    sleep 1

    echo "all digits and leds off"
    : > $DISPLAY_PATH/value
    for led in $DISPLAY_PATH:*; do
        echo 0 > "$led/brightness"
    done

    echo "digit order: 1234"
    echo 12345678 > $DISPLAY_PATH/value
    sleep 1

    for led in $DISPLAY_PATH:*; do
        echo 1 > "$led/brightness"
        led_name="${led##*:}"
        led_name=$(printf '%s' "$led_name" | tr '[:lower:]' '[:upper:]')
        echo "led $led_name on"
        display_text "$led_name" " " 0.25
        echo 0 > "$led/brightness"
    done
}

trap display_cleanup HUP TERM QUIT INT

NUM_DIGITS=$(cat $DISPLAY_PATH/num_digits)

usage() {
    echo "Usage:"
    echo "  $0 -t  <text_to_display>"
    echo "  $0 -c  Check display config"
    exit 1
}

case "$1" in
    -t)
        [ $# -ne 2 ] && usage
        display_init
        display_text "$2" " " 0.5
        display_cleanup
        ;;
    -c)
        display_init
        display_check
        display_cleanup
        ;;
    *)
        usage
        ;;
esac
